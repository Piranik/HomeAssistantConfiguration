homeassistant:
  customize:
    sensor.nas_last_boot:
      device_class: timestamp
      unit_of_measurement: 
      friendly_name: Last boot
      icon: mdi:clock
    #
    sensor.nas_cpu_use_percent:
      friendly_name: 'CPU use'
    sensor.nas_cpu_load_1m:
      unit_of_measurement: ''
      friendly_name: 'Load (1m)'
    sensor.nas_cpu_load_5m:
      unit_of_measurement: ''
      friendly_name: 'Load (5m)'
    sensor.nas_cpu_load_15m:
      unit_of_measurement: ''
      friendly_name: 'Load (15m)'
    sensor.nas_cpu_temperature:
      device_class: 'temperature'
      unit_of_measurement: '°C'
      friendly_name: 'CPU temperature'
      templates:
        hs_color: >-
          if (state > 80) return [0, 85];
          else if (state > 60) return [40, 70];
          else return [0, 0];
    #
    sensor.nas_memory_use_percent:
      friendly_name: 'Memory use'
    sensor.nas_memory_free:
      unit_of_measurement': 'MiB'
      friendly_name: 'Memory free'
    #
    sensor.nas_swap_use:
      unit_of_measurement': 'MiB'
      friendly_name: 'Swap use'
      icon: mdi:harddisk
    #
    sensor.nas_pool_pool1_health:
      friendly_name: 'Pool health'

    sensor.nas_alert_level:
      friendly_name: "Alert Level"
      icon: mdi:alert
    sensor.nas_alerts:
      friendly_name: "Alert Message"
      icon: mdi:message-alert
    sensor.nas_volume_pct_used:
      friendly_name: "Pool use"

  customize_glob:
    sensor.*_percent:
      unit_of_measurement: '%'
    #
    sensor.nas_cpu_*:
      icon: mdi:memory
    #
    sensor.nas_memory_*:
      icon: mdi:memory
    #
    sensor.nas_disk_*:
      icon: mdi:harddisk
    sensor.nas_disk_ada0*:
      friendly_name: "ada0"
    sensor.nas_disk_ada1*:
      friendly_name: "ada1"
    sensor.nas_disk_ada2*:
      friendly_name: "ada2"
    sensor.nas_disk_ada3*:
      friendly_name: "ada3"
    sensor.nas_disk_*_temperature:
      unit_of_measurement: '°C'
      scan_interval: 300
      templates:
        hs_color: >-
          if (state > 55) return [0, 85];
          else if (state > 45) return [40, 70];
          else if (state < 25) return [40, 70];
          else return [0, 0];
    #
    sensor.nas_pool_*:
      icon: mdi:harddisk
    sensor.nas_pool_*_use_percent:
      icon: mdi:gauge
      templates:
        hs_color: >-
          if (state < 75) return [0, 0];
          else if (state < 80) return [40, 70];
          else return [0, 85];
    sensor.nas_pool_*_health:
      templates:
        hs_color: >-
          if (state == "HEALTHY" or state == "ONLINE") return [0, 0];
          if (state == "DEGRADED") return [40, 70];
          else return [0, 85];

sensor:
  - platform: rest
    name: nas_alert_level
    resource: http://nas.lan/api/v1.0/system/alert/?format=json
    username: !secret nas_username
    password: !secret nas_password
    value_template: "{{ value_json['objects'][0].level }}"
    authentication: basic
    scan_interval: 3600
    headers:
      Content-Type: application/json

  - platform: rest
    name: nas_alerts
    resource: http://nas.lan/api/v1.0/system/alert/?format=json
    value_template: "{{ value_json['objects'][0].message }}"
    username: !secret nas_username
    password: !secret nas_password
    authentication: basic
    scan_interval: 3600
    headers:
      Content-Type: application/json

  - platform: mqtt
    name: nas_last_boot
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.last_boot }}

  - platform: mqtt
    name: nas_cpu_use_percent
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ 100 - value_json.cpu_stat.idle | round(1) }}

  - platform: mqtt
    name: nas_cpu_load_1m
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.cpu_load_1m }}

  - platform: mqtt
    name: nas_cpu_load_5m
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.cpu_load_5m }}

  - platform: mqtt
    name: nas_cpu_load_15m
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.cpu_load_15m }}

  - platform: mqtt
    name: nas_cpu_temperature
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.cpu_temperature }}

  - platform: mqtt
    name: nas_memory_use_percent
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.memory_stat.percent }}

  - platform: mqtt
    name: nas_memory_free
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ ((value_json.memory_stat.free | int) / 1024 / 1024) | round(1) }}

  - platform: mqtt
    name: nas_swap_use
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ ((value_json.swap_stat.used | int) / 1024 / 1024) | round(1) }}

  - platform: mqtt
    name: nas_disk_ada0_temperature
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.disks_temperature.ada0 }}

  - platform: mqtt
    name: nas_disk_ada1_temperature
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.disks_temperature.ada1 }}

  - platform: mqtt
    name: nas_disk_ada2_temperature
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.disks_temperature.ada2 }}

  - platform: mqtt
    name: nas_disk_ada3_temperature
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.disks_temperature.ada3 }}

  - platform: mqtt
    name: nas_pool_pool1_use_percent
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.pools_stat.pool1.percent }}

  - platform: mqtt
    name: nas_pool_pool1_health
    state_topic: "sensor/nas_state"
    value_template: >-
      {{ value_json.pools_stat.pool1.health }}
