homeassistant:
  customize:
    sensor.nas_last_boot:
      icon: mdi:clock-outline
    sensor.nas_volume_report:
      friendly_name: "Pool Status"
      icon: mdi:harddrive
      templates:
        hs_color: >-
          if (state == "HEALTHY") return [0, 0];
          else return [0, 85];
    sensor.nas_alert_level:
      friendly_name: "Alert Level"
      icon: mdi:alert
    sensor.nas_alert_message:
      friendly_name: "Alert Message"
      icon: mdi:message-alert
    sensor.nas_volume_pct_used:
      friendly_name: "Pool use"
      icon: mdi:gauge
      templates:
        hs_color: >-
          if (state < 80) return [0, 0];
          else return [0, 85];
    sensor.nas_disk_ada0_temperature:
      friendly_name: "ada0"
    sensor.nas_disk_ada1_temperature:
      friendly_name: "ada1"
    sensor.nas_disk_ada2_temperature:
      friendly_name: "ada2"
    sensor.nas_disk_ada3_temperature:
      friendly_name: "ada3"

  customize_glob:
    sensor.nas_disk_*_temperature:
      unit_of_measurement: 'Â°C'
      scan_interval: 300
      templates:
        hs_color: >
          if (state > 55) return [0, 85];
          else if (state > 45) return [40, 70];
          else if (state < 25) return [40, 70];
          else return [0, 0];

sensor:
  - platform: command_line
    name: nas_last_boot
    scan_interval: 3000
    command: >-
      ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no -q
      nas.lan
      perl -MPOSIX -le '$t = `stat -f %m /var/run/dmesg.boot`; $t = strftime "%FT%T%z", localtime($t); $t =~ s/..$/:$&/; print $t'

  - platform: command_line
    name: nas_disk_ada0_temperature
    command: >-
      ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no -q
      nas.lan
      smartctl -A /dev/ada0 | awk '{ if ($1 == 194) print $10 }'

  - platform: command_line
    name: nas_disk_ada1_temperature
    command: >-
      ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no -q
      nas.lan
      smartctl -A /dev/ada1 | awk '{ if ($1 == 194) print $10 }'

  - platform: command_line
    name: nas_disk_ada2_temperature
    command: >-
      ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no -q
      nas.lan
      smartctl -A /dev/ada2 | awk '{ if ($1 == 194) print $10 }'

  - platform: command_line
    name: nas_disk_ada3_temperature
    command: >-
      ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no -q
      nas.lan
      smartctl -A /dev/ada3 | awk '{ if ($1 == 194) print $10 }'

  - platform: snmp
    name: nas_uptime
    host: nas.lan
    baseoid: 1.3.6.1.2.1.1.3.0
    scan_interval: 60
    accept_errors: true
    unit_of_measurement: 'seconds'
    value_template: '{{ ((value | int) / 100) | int }}'

  - platform: snmp
    name: nas_cpu_load
    host: nas.lan
    baseoid: 1.3.6.1.4.1.2021.10.1.3.3
    scan_interval: 60
    accept_errors: true
    unit_of_measurement: '15 min'
    value_template: '{{ value | float }}'

  - platform: snmp
    name: nas_cpu_use
    host: nas.lan
    baseoid: 1.3.6.1.4.1.2021.11.11.0
    scan_interval: 60
    accept_errors: true
    unit_of_measurement: '%'
    value_template: '{{ 100 - (value | int) }}'

  - platform: snmp
    name: nas_ram_free
    host: nas.lan
    baseoid: 1.3.6.1.4.1.2021.4.5.0
    scan_interval: 60
    accept_errors: true
    unit_of_measurement: 'MiB'
    value_template: '{{ (value | int) / 1024 / 1024 | round(1) }}'

  - platform: snmp
    name: nas_ram_total
    host: nas.lan
    baseoid: 1.3.6.1.4.1.2021.4.5.0
    scan_interval: 60
    accept_errors: true
    unit_of_measurement: 'Bytes'
    value_template: '{{ value | int }}'

  - platform: snmp
    name: nas_ram_used
    host: nas.lan
    baseoid: 1.3.6.1.4.1.2021.4.6.0
    scan_interval: 60
    accept_errors: true
    unit_of_measurement: '%'
    value_template: '{{ (value | int) * 100 / (states("sensor.nas_ram_total") | int) | round(1) }}'

  - platform: rest
    name: nas_volume_report
    json_attributes:
      - name
      - status
      - used_pct
      - is_decrypted
    resource: http://nas.lan/api/v1.0/storage/volume/pool1/?format=json
    username: !secret nas_username
    password: !secret nas_password
    value_template: '{{ value_json.status }}'
    authentication: basic
    scan_interval: 3600
    headers:
      Content-Type: application/json

  - platform: template
    sensors:
      nas_volume_pct_used:
        unit_of_measurement: '%'
        value_template: "{{ state_attr('sensor.nas_volume_report', 'used_pct') | replace('%', '') | int }}"
        entity_id: sensor.nas_volume_report

  - platform: rest
    name: nas_alert_level
    resource: http://nas.lan/api/v1.0/system/alert/?format=json
    username: !secret nas_username
    password: !secret nas_password
    value_template: "{{ value_json['objects'][0].level }}"
    authentication: basic
    scan_interval: 3600
    headers:
      Content-Type: application/json

  - platform: rest
    name: nas_alert_message
    resource: http://nas.lan/api/v1.0/system/alert/?format=json
    value_template: "{{ value_json['objects'][0].message }}"
    username: !secret nas_username
    password: !secret nas_password
    authentication: basic
    scan_interval: 3600
    headers:
      Content-Type: application/json
